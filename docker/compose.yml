version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: cmorp_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-cmorp_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password}
      POSTGRES_DB: ${POSTGRES_DB:-microgrid_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - cmorp_network

  redis:
    image: redis:7-alpine
    container_name: cmorp_redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_pass}
    ports:
      - "6379:6379"
    networks:
      - cmorp_network

  mosquitto:
    image: eclipse-mosquitto:2
    container_name: cmorp_mqtt
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    ports:
      - "1883:1883"
      - "9001:9001"
    networks:
      - cmorp_network

  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: cmorp_timeseries
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password}
    volumes:
      - timescale_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - cmorp_network

  grafana:
    image: grafana/grafana:latest
    container_name: cmorp_grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin123}
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    ports:
      - "3000:3000"
    networks:
      - cmorp_network
    depends_on:
      - postgres
      - timescaledb

  nginx:
    image: nginx:alpine
    container_name: cmorp_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../pwa:/usr/share/nginx/html:ro
    ports:
      - "8080:80"
      - "8443:443"
    networks:
      - cmorp_network
    depends_on:
      - api_server

  api_server:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    container_name: cmorp_api
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
      - MQTT_BROKER=mosquitto
    volumes:
      - ../src:/app/src
      - ../plugins:/app/plugins
    ports:
      - "5000:5000"
    networks:
      - cmorp_network
    depends_on:
      - postgres
      - redis
      - mosquitto

  solver_worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile.solver
    container_name: cmorp_solver
    environment:
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
      - SOLVER_TIMEOUT=300
    volumes:
      - ../src:/app/src
    networks:
      - cmorp_network
    depends_on:
      - redis

  alert_service:
    build:
      context: ..
      dockerfile: docker/Dockerfile.alerts
    container_name: cmorp_alerts
    environment:
      - WEBHOOK_URL=${ALERT_WEBHOOK_URL}
      - WHATSAPP_API_KEY=${WHATSAPP_API_KEY}
    volumes:
      - ../src:/app/src
    networks:
      - cmorp_network

networks:
  cmorp_network:
    driver: bridge

volumes:
  postgres_data:
  timescale_data:
  grafana_data:
